----------------------------------------------------------------------------------------------------------------------------------------------
* JSP(게시판 만들기)

-- 1. tomcat 서버 8.5버전 BBS프로젝트 생성(index.jsp파일 생성후 HelloWorld문구 출력 서버 확인)

-- 2. Bootstrap을 이용한 로그인 화면 구현 및 네비게이션 구현(상단의 메뉴들)
	1. EUC-KR -> UTF-8(인코딩 변경)
	2. login.jsp파일 생성
		- 먼저 디자인부터 만들고 나중에 기능을 입히는 경우가 많다.
	3. bootstrap 설정 : bootstrap 3버전 다운 후 css/fonts/js 파일 붙여넣기
		- meta 설정 
		- bootstrap은 웹을 사용자가 볼 때 컴퓨터에서 보든 핸드폰에서 보든 자동적으로
		해상도를 설정해주는 반응형 템플릿
	4. css/js 파일을 지정해주어서 사용하도록 지정(link, script)
	5. 네비게이션 구현
		- 하나의 웹사이트의 전반적인 구성을 보여준다 메뉴 같은거
		- 상단의 메뉴바 같은거
	6. 로그인 양식 작성
		- 아아디 : userID, userPassword (DB컬럼명과 동일하게 해야한다)
		- submit : 로그인들어가는 버튼 영어단어로 제출하다라는 뜻

-- 3. 게시판에 사용할 DB 구축
	- MySQL로 DB를 구축 하였다.
	- 사용하는 테이블 : user, bbs
	- user(컬럼) : userID, userPassword, userName, userGender, userEmail
	- bbs(컬럼) : bbsID, bbsTitle, userID, bbsDate, bbsContent, bbsAvailable

-- 4. JavaBeans 작성
	- User.java 생성
	- 한명의 회원의 데이터를 다룰 수 있는 자바빈즈(JavaBeans)작성 getter/setter

-- 5. UserDAO 데이터베이스 접근 객체
	- UserDAO : MySQL에 접속하게 해주는 부분 작성
	- 실질적으로 MySQL에 접속하게 해주는 부분
	- DriverManager을 통해서 URL검색, 아이디 접속, 패스워드 접속
	- try/catch문을 이용하여 예외가 발생한 경우 해당예외를 출력

-- 6. 로그인 기능 구현
	try문
	- 하나의 계정에 대한 로그인 시도를 해주는 메서드
	- 하나의 문장(쿼리)를 미리 준비해 놓는다. String SQL = "SELECT userPassword FROM USER WEHRE userID =?";
	- 쿼리가 실행한 결과를 넣어준다.
	if문
	- 아이디가 존재한다면 if문을 만나게된다.
	- 결과로 나온 userPassword를 받고 접속을 시도한 userPassword와 동일하다면 return 1;(로그인 성공)하게 해준다.
	- userPassword가 서로 동일하지 않다면 return 0(비밀번호 불일치)
	- 결과가 존재하지 않는다면 return -1(아이디가 없다)의 값을 가지게 된다.
	else문
	- 예외가 발생한 경우 해당예외를 출력
	catch문
	- return -2 (데이터 베이스 오류)

-- 7. 사용자에게 로그인결과를 알려줄 페이지 작성(loginAction.jsp)
	- 상단의 임포트문을 통하여 UserDAO를 사용
	- java.io 에 있는 printwriter을 사용 ( 자바 스크립트 문장을 사용하기 위함)
	- 아까 만든 user(JavaBeans)를 사용하기위함
		<jsp:useBean id="user" class="user.User" scope="page" /> // scope 이 페이지에 한해서
	- property를 통해 userID와 userPassword를  가져온다.
	- userDAO에서 넘어온 userID, userPassword정보를 가지고 Body문안에 처리
	- userDAO 인스턴스 생성
	if문
	- userDAO에서 장성하고 return 값을 통해서 if문을 통해 script 문장 적용	
	- return 값이 1(로그인 성공)일 경우 main화면으로 돌아가게 설정
	- return 값이 0(비밀번호가 틀림)일 경우 history.back을 통해 이전화면(로그인 페이지)으로 이동하게 설정
	- return 값이 -1(존재하지 않는 아이디)일 경우 history.back을 통해 이전화면(로그인 페이지)으로 이동하게 설정
	- return 값이 -2(데이터베이스 오류가 발생했을 때)일 경우 history.back을 통해 이전화면(로그인 페이지)으로 이동하게 설정
	
--8. mysql connector를 라이브러리 파일(lib)안에 붙여넣기 해준다.
	- lib폴도 안에 mysql connector를 복사해 붙여넣어준다.(Java Build Path에 Driver파일 추가)
	- 프로젝트 우클릭(Properties) -> Java Build Path -> Libraries -> Classpath선택후 -> Add JARs -> connector 추가

-- 9. 회원가입 양식 작성
	- 로그인 페이지를 그대로 가져온다
	- 아래부분 container 사용하는 부분에서 로그인 -> 회원가입으로 변경
	- user테이블의 컬럼 만큼 속성 추가
	- 성별 체크 부분 div -> label -> input 형식으로 남자/여자 항목별로 체크박스 생성
	- action부분에 joinAction.jsp로 이동하도록 경로 지정

-- 10. 회원가입 기능 구현하기
	- User 클래스를 user라는 인스턴스를 통해서 사용한다(매게변수)
	- user 테이블의 속성은 5개이기 때문에 쿼리문에 5개의 데이터 값을 바도록 지정해준다 ?  <- 5개
	try문
	- pstmt = connprepareStatement(SQL) 쿼리문을 사용하기 위한 코드
	- 5개의 ?안에 들어갈 값을 순서/어떤 데이터가 들어갈지 지정해준다.(pstmt.setString(1, user.getUserID)) -> 첫번 째 ?값안에 userID의 값이 들어간다.
	- return pstmt.executeUpdate(); 해당 statement를 실행 한 그 결과를 넣을 수 있도록 한다.
	catch문
	- 데이터베이스에서 오류가 발생 하였을 때 return 값으로 -1을 반환하도록한다.

-- 11. 사용자에게 회원가입결과를 알려줄 페이지 작성(joinAction.jsp)
	- 로그인할때에는 ID, Password값만 알면 됬지만 회원가입때에는 DB컬럼에 있는 5가지 속성을 다 지정해줘야한다. jsp:Property
	if문
	- 사용자가 회원가입할때의 경우의 수를 생각해야한다.(ex>ID입력이 비어있을때 등등)
		- and 연산자 ||를 이용하여 모든 경우의 수에 대한 조건 작성
	- 입력이 안 되었을 때 다시 이전페이지(회원가입하는 페이지)로 돌아가는 스크립트부 작성
	else문
	- if문을 지나 쳤다면 DB에 ID가존재 하거나 회원가입의 성공하는 두 가지의 경우의수에 대한 코드작성
	- result의 값이 -1(이미 ID존재) 이면 다시 회원가입창으로 돌아가도록 스크립트  부 작성
	- 회원가입의 성공하면 회원가입과 동시에 메인 페이지로 이동하도록 경로 지정

-- 12. 접속한 회원(로그인 성공) 세션 관리하기
	- 세션이라는 것은 기본적으로 현재 접속해있는 회원에게 할당해주는 고유id이다.
	- 웹 서버는 한명의 회원을 세션id로 구분할 수 있다.
	- 로그인을 성공했을 때 세션id를 부여
	- loginAction, joinAction에 로그인/회원가입을 성공했을 때 세션 id부여]
	- 부여받은 할당된 세션id를 할당해주는 것은 로그아웃 페이지에서
	- 로그인이 이미 된 사람은 회원가입을 할 수 없게 해주는 기능
	- 로그인이 이미 된 사람은 회원가입을 할 수 없게 해주는 기능
	- index.jsp에서 경로 index.jsp -> main.jsp로 경로 변경
	- index.jsp에 로기인이 된 사람들의 로그인 정보를 담을 수 있도록 해주는 기능
	- 현재 세션이 존재하는 사람이라면 그 아이디 값을 그대로 받아오게 해준다.
	- 로그인을 하지 않은 사람은 로그인이나 회원가입을 할 수 있도록 하게 해주는 기능
	- 그렇지 않다면(로그인이 되있는 경우) 로그아웃을 할 수 있게 해주는 기능
	- 센션관리를 통해서 전반적인 회원정보를 관리하고 페이지 구성같은 경우 로그인 유/무에 따라서 다른페이지를 보여줄 수 있도록 한다.

-- 13. 게시판 메인 페이지 디자인
	- 게시판화면 구현 : 게시판은 기본적으로 특정한 글을 작성했을 때 작성한 순서대로 1열로 보여지는 테이블 구조를 가진다.(하나의 표 형태)

-- 14. 게시판 데이터DB 구축
	- 컬럼 :  bbsID, bbsTitle, userID, bbsDate, bbsContent, bbsAvailable
	- JavaBeans생성
	
-- 15. 글쓰기 기능 구현하기(글쓰기 양식)
	- 게시판 제목 : input
	- 글 내용 : textarea

-- 16. BbsDAO 데이터베이스 접근 객체
	- user에서 사용한 것 과 동일하게 MySQL에 접속하는 Bbs DAO(데이터베이스 접근 객체)를 만든다.
	- 현재의 시간을 가져오는 메서드 작성
	- 게시글 번호를 설정해주는 메서드 작성
	- 실제로 글을 쓰게 해주는 메서드 작성

-- 17. 사용자에게 게시글을 작성하게 해줄 페이지 작성(writeAction.jsp)
	if문
	- 로그인 유/무에 대한 내용이 담긴 메서드 작성
	else문
	- 로그인이 되있다면 wirte함수를 이용하여 실제로 게시글을 작성하는 메서드 작성
		if문	
		- 데이터베이스 오류가 발생한다면 이전 페이지로 이동하게해준다.
		else문
		- 성공적으로 게시글을 작성 한 경우 bbs.jsp화면으로 돌아가게 해준다.

-- 18. BbsDAO 실제로 글을 쓰게 해주는 메서드
	- BBS테이블 안에 6개의 인자가 들어갈 수 있게 해주는 쿼리문 작성
	- 현재 연결되있는 객체를 이용해서 실행 준비 단계로 만들어준다.
	- bbs 데이터베이스 안에 값들ㅇ르 넣어준다.
	- 성공적으로 수행을 했다면 이렇게 0이상의 결과를 반환한다.
	- 그렇지 않을 경우(오류가 발생했을 때) -1을 반환한다.

-- 19. 게시판 글 목록 기능 구현
	- 삭제가 되지않아 bbsAvailable의 값이 1인 값들 중 위에서 10개까지 가져오게 하는 쿼리문
	- Bbs라는 클래스에서 나오는 인스턴스를 보관할 수 있는 리스트를 만든다.
	- 리스트에 해당 인스턴스를 반환해준다.

-- 20. 게시글 페이징 처리 메서드
	- 쿼리문의 결과가 하나라도 존재한다면 다음 페이지로 넘어갈 수 있게 true값을 통해서 알려준다(10개가 넘으면 1페이지 -> 2페이지)
	
-- 21. 게시판 메인화면 작성
	- bbs.BbsDAO, bbs.Bbs, ArrayList를 import
	- 현제 게시판이 몇 번째 페이지인지 알려주도록 하게한다.
	- tbody에 게시글을 뽑아온다.

-- 22. 오류 수정
	-- 프론트적으로 화면은 나오나 DB안에 있던 BBS목록이 출력되지 않았다.
		- 경로 확인 이상무
		- 문제 : 쿼리문 중 select * from __ // from 뒤에 테이블명인 BBS가 붙어있지 않았다.
		- 해결 : 쿼리문에 from뒤 테이블명을 입력 후 오류 해결

-- 23. 게시글을 확인하기 위한 페이지(view.jsp) 작성
	- 메게변수 및 기본세팅
	- 해당글의 구체적인 내용을 가져온다 (객체생성, 스크립트)

-- 24. 게시글 내용중 특수문자 처리
	- 저장되는 내용중 /,# 등등의 웹에서는 특수문자를 읽게 되면 html프론트 부분적인 내용으로 인식하기 때문에 따로 지정해야 한다.
	- replaceAll() 으로 해당 특수문자를 대채하는 코드 작성
	- 웹 해킹 공격(크로스 사이트 스크립팅) : 게시판에 어떤 글을 작성할 때 스크립트 문장을 삽입함으로써 글을보고있는 사람들 한테 어떠한 영향을 끼치는 기법.
	- 그러므로 특수문자 관련해서 잘 처리 해줘야한다.
	-.replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">", "&gt;").replaceAll("\n", "<br>")
	- &주의 ($랑 헷갈림)

-- 25. 게시물 수정(버튼) 기능 구현 (페이지 오류 스크립트부를 닫는 문장에/가 없었음)
	- 특정한 bbsID에 해당되는 bbsTitle, bbsContent를 바꾸어주는 쿼리문 작성
	- update.jsp 생성
	- bbs.Bbs와 bbs.BbsDAO 임포트
	- 현재 수정하고자하는 글의 번호가 들어오지 않았다면 유효하지 않다고 출력
	- 스크립트부를 닫는문장 </script> 에/ 주의

-- 26. 게시물 삭제(버튼) 기능 구현
	- delete.jsp 생성
	- 글을 삭제하더라도 글에 대한 정보가 남아있을 수 있도록 bbsAvailable값만 0으로 바꾼다.
	- deleteAction.jsp 새엇ㅇ
	- 로그인 유효성 확인
	- view.jsp에서 삭제에 대한 확인 메시지 나타내기 구현
	
-- 27. 메인화면 디자인
	- BootStrap에서 제공하는 요소인 jumbotron 사용
	- 커스텀 css파일 생성(나눔고딕, 한나)후 적용
	- myCarousel 적용 사진 파일 사용
	- 이전/다음 사진보기 기능 추가

-- 코드안에 주석이 있어 읽기 쉬울 것 입니다.
----------------------------------------------------------------------------------------------------------------------------------------------